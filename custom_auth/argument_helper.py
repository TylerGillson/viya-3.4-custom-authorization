#
# Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the License);
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
import argparse
import custom_auth.config as config

"""
argument_helper.py
==================

A helper method to modify configuration values at run-time via command-line options.
"""


def parse_arguments():
    """
    This method leverages the argparse module to optionally modify the script's configuration variables at run-time.
    """

    # Define command-line arguments:
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-se",
        "--sas-endpoint",
        required=False,
        help="Base URL of the Viya Services node in your target deployment."
    )
    parser.add_argument(
        "-cp",
        "--credentials-path",
        required=False,
        help="Local filesystem path to the credentials.json file generated by the sas-admin CLI."
    )
    parser.add_argument(
        "-lr",
        "--log-root",
        required=False,
        help="Local filesystem path specifying the root location to write log files into."
    )
    parser.add_argument(
        "-agf",
        "--auto-group-file",
        required=False,
        help="Location of the file containing all auto-maintained group definitions."
    )

    # Extract command-line argument(s) and update configuration constants:
    args = parser.parse_args()
    if args.sas_endpoint is not None:
        config.BASE_URL = args.sas_endpoint
    if args.credentials_path is not None:
        config.CREDENTIALS_PATH = args.credentials_path
    if args.log_root is not None:
        config.LOG_ROOT = args.log_root
    if args.auto_group_file is not None:
        config.CUSTOM_GROUPS_DEFINITION_FILE = args.auto_group_file
